# syntax=docker/dockerfile:1

FROM golang:1.23 as gopatch

# Patching go std net/http
COPY test/go-net-http-patch/transfer.go /tmp 
RUN git clone https://github.com/golang/go.git /usr/local/go-src
WORKDIR /usr/local/go-src
RUN git checkout go1.23.0
RUN cp /tmp/transfer.go ./src/net/http/transfer.go
RUN cd ./src && ./make.bash

# Add the patched Go binaries to PATHÃŸ
ENV PATH /usr/local/go-src/bin:$PATH

FROM gopatch as builder

# Set destination for COPY
WORKDIR /app

# Download Go modules
COPY go.mod go.sum ./
RUN go mod download

COPY . .

# Build
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o ./go-gcsproxy

FROM alpine:latest

COPY --from=builder /app/go-gcsproxy /

# Optional:
# To bind to a TCP port, runtime parameters must be supplied to the docker command.
# But we can document in the Dockerfile what ports
# the application is going to listen on by default.
# https://docs.docker.com/reference/dockerfile/#expose
EXPOSE 9080

# Run
CMD ["/go-gcsproxy"]